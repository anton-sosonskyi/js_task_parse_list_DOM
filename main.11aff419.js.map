{"version":3,"sources":["scripts/main.js"],"names":["elementsList","Array","from","document","querySelector","children","sortList","list","getNumber","string","number","Number","parseInt","slice","replace","sort","a","b","dataset","salary","forEach","child","append","getEmployees","employees","element","employee","name","innerText","push"],"mappings":"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","file":"main.11aff419.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst elementsList = Array.from(document.querySelector('ul').children);\n\nfunction sortList(list) {\n  const getNumber = (string) => {\n    const number = Number.parseInt(string.slice(1).replace(/,/g, ''));\n\n    return number;\n  };\n\n  list.sort((a, b) => {\n    return getNumber(b.dataset.salary) - getNumber(a.dataset.salary);\n  });\n\n  list.forEach((child) => {\n    document.querySelector('ul').append(child);\n  });\n\n  return list;\n}\n\nfunction getEmployees(list) {\n  const employees = [];\n\n  for (const element of list) {\n    const employee = {\n      name: element.innerText,\n      ...element.dataset,\n    };\n\n    employees.push(employee);\n  }\n\n  return employees;\n}\n\nsortList(elementsList);\ngetEmployees(elementsList);\n"]}